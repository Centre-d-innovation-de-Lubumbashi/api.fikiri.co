generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id             Int           @id @default(autoincrement())
  email          String        @unique
  name           String
  password       String?
  phoneNumber    String?
  address        String?
  token          String?
  googleImage    String?
  profile        String?
  createdAt      DateTime?     @default(now())
  updatedAt      DateTime?     @updatedAt
  solutions      Solution[]
  roles          Role[]        @relation("RoleToUser")
  feedbacks      Feedback[]
  pole           Pole?         @relation(fields: [poleId], references: [id])
  poleId         Int?
  organisation   Organisation? @relation(fields: [organisationId], references: [id])
  organisationId Int?
}

model Organisation {
  id        Int       @id @default(autoincrement())
  name      String    @unique
  createdAt DateTime? @default(now())
  updatedAt DateTime? @updatedAt
  users     User[]
}

model Role {
  id        Int       @id @default(autoincrement())
  name      String    @unique
  createdAt DateTime? @default(now())
  updatedAt DateTime? @updatedAt
  users     User[]    @relation("RoleToUser")
}

model Call {
  id          Int        @id @default(autoincrement())
  name        String     @db.Text
  startedAt   DateTime
  endedAt     DateTime
  description String     @db.Text
  createdAt   DateTime?  @default(now())
  updatedAt   DateTime?  @updatedAt
  solutions   Solution[]
  thematics   Thematic[] @relation("CallToThematic")
}

model Thematic {
  id         Int         @id @default(autoincrement())
  name       String      @db.Text
  odds       String
  createdAt  DateTime?   @default(now())
  updatedAt  DateTime?   @updatedAt
  solutions  Solution[]
  calls      Call[]      @relation("CallToThematic")
  challenges Challenge[] @relation("ChallengeToThematic")
}

model Solution {
  id              Int              @id @default(autoincrement())
  name            String?          @db.Text
  imageLink       String?
  videoLink       String?
  description     String?          @db.Text
  callId          Int?
  thematicId      Int?
  targetedProblem String?          @db.Text
  statusId        Int?
  createdAt       DateTime?        @default(now())
  updatedAt       DateTime?        @updatedAt
  userId          Int?
  call            Call?            @relation(fields: [callId], references: [id])
  status          Status?          @relation(fields: [statusId], references: [id])
  thematic        Thematic?        @relation(fields: [thematicId], references: [id])
  user            User?            @relation(fields: [userId], references: [id])
  challenges      Challenge[]      @relation("ChallengeToSolution")
  images          SolutionImages[]
  feedbacks       Feedback[]
  pole            Pole?            @relation(fields: [poleId], references: [id])
  poleId          Int?
}

model Pole {
  id        Int        @id @default(autoincrement())
  name      String     @unique
  createdAt DateTime?  @default(now())
  updatedAt DateTime?  @updatedAt
  Solution  Solution[]
  User      User[]
}

model Label {
  id        Int        @id @default(autoincrement())
  name      String     @unique
  feedbacks Feedback[]
}

model Feedback {
  id           Int        @id @default(autoincrement())
  adminComment String
  userComment  String
  createdAt    DateTime?  @default(now())
  updatedAt    DateTime?  @updatedAt
  labels       Label[]
  solutions    Solution[]
  user         User?      @relation(fields: [userId], references: [id])
  userId       Int?
}

model SolutionImages {
  id         Int       @id @default(autoincrement())
  imageLink  String
  solution   Solution  @relation(fields: [solutionId], references: [id])
  solutionId Int
  createdAt  DateTime? @default(now())
  updatedAt  DateTime? @updatedAt
}

model Status {
  id        Int        @id @default(autoincrement())
  name      String
  createdAt DateTime?  @default(now())
  updatedAt DateTime?  @updatedAt
  solutions Solution[]
}

model Challenge {
  id        Int        @id @default(autoincrement())
  name      String     @db.Text
  createdAt DateTime?  @default(now())
  updatedAt DateTime?  @updatedAt
  solutions Solution[] @relation("ChallengeToSolution")
  thematics Thematic[] @relation("ChallengeToThematic")
}
